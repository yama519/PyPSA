attribute,type,unit,default,description,status
name,string,n/a,n/a,Unique name,Input (required)
bus0,string,n/a,n/a,Name of first bus (typically higher voltage) to which transformer is attached.,Input (required)
bus1,string,n/a,n/a,Name of second bus (typically lower voltage) to which transformer is attached.,Input (required)
type,string,n/a,n/a,"Name of 2-winding transformer standard type. If this is not an empty string """", then the transformer type impedance parameters are taken from the standard type along with ""num_parallel"". This will override any values set in r, x, g, b, s_nom, tap_ratio, tap_side and phase_shift. If the string is empty, PyPSA will simply read r, x, etc.",Input (optional)
model,string,n/a,t,"Model used for admittance matrix; can be ""t"" or ""pi""; since PyPSA Version 0.8.0 it defaults to ""t"" following physics and DIgSILENT PowerFactory; versions of PyPSA before 0.8.0 and some other power system tools, like MATPOWER, PYPOWER, PSS/SINCAL use the less physical ""pi"" model.", Input (required)
x,float,per unit,0,"Series reactance (per unit, using s_nom as base power); must be non-zero for AC branch in linear power flow. Series impedance :math:`z = r + jx` must be non-zero for the non-linear power flow. Ignored if type defined.",Input (required)
r,float,per unit,0,"Series resistance (per unit, using s_nom as base power); must be non-zero for DC branch in linear power flow. Series impedance :math:`z = r + jx` must be non-zero for the non-linear power flow. Ignored if type defined.",Input (required)
g,float,per unit,0,"Shunt conductivity (per unit, using s_nom as base power). Ignored if type defined.",Input (optional)
b,float,per unit,0,"Shunt susceptance (per unit, using s_nom as base power). Ignored if type defined.",Input (optional)
s_nom,float,MVA,0,Limit of apparent power which can pass through branch.,Input (optional)
s_nom_extendable,boolean,n/a,False,Switch to allow capacity s_nom to be extended in OPF.,Input (optional)
s_nom_min,float,MVA,0,"If s_nom is extendable in OPF, set its minimum value.",Input (optional)
s_nom_max,float,MVA,inf,"If s_nom is extendable in OPF, set its maximum value (e.g. limited by potential).",Input (optional)
s_max_pu,static or series,per unit,1,The maximum allowed absolute flow per unit of s_nom for the OPF.,Input (optional)
capital_cost,float,currency/MVA,0,Capital cost of extending s_nom by 1 MVA.,Input (optional)
num_parallel,float,n/a,1,"When ""type"" is set, this is the number of parallel transformers (can also be fractional). If ""type"" is empty """" this value is ignored.",Input (optional)
tap_ratio,float,per unit,1,Ratio of per unit voltages at each bus for tap changed.  Ignored if type defined.,Input (optional)
tap_side,int,n/a,0,"Defines if tap changer is modelled at the primary 0 side (usually high-voltage) or the secondary 1 side (usually low voltage) (must be 0 or 1, defaults to 0). Ignored if type defined.",Input (optional)
tap_position,int,n/a,0,"If the transformer has a type, determines position relative to the neutral tap position.",Input (optional)
<<<<<<< HEAD
tap_min,int,n/a,-2,Minimum tap position,Input (optional)
tap_max,int,n/a,2,Maximum tap position,Input (optional)
tap_step,float,Percent,2.5,Tap step size in percentage of voltage change,Input (optional)
v_min,float,per unit,0.9,"Minimum allowed voltage in the grid, used when ""ctrl_buses"" are  more than one. ",Input (optional)
v_max,float,per unit,1.02,"Maximum allowed voltage in the grid, used when ""ctrl_buses"" are more than one. ",Input (optional)
v_set,float,per unit,1,"Nominal v_mag_pu of transformer, it is used by oltc control to bring the controlled bus voltage as close as possible to ""v_set"".",Input (optional)
deadband,float,Percent,1.8,"Deadband will determine the acceptable upper range and lower range values of controlled bus voltages. Deadband will be used when ""ctrl_buses"" is one or empty, if it is empty, oltc will take bus of transformer secondary as the controlled bus. If ""ctrl_buses"" contains more than one bus, ""v_min"" and ""v_max"" are used instead of deadband.",Input (optional)
ctrl_buses,string,n/a,,"Names of the control buses, oltc controller can control either one bus or several buses, if single bus is given, from the available tap positions controller will choose the tap position that brings the controlled bus voltage as close as possible to the ""v_set"" the controller will converge if the controlled bus voltage is between v_set + deadband/100*v_set and v_set - deadband/100*v_set values. If more than one bus is given to be controlled, from the available tap positions controller will choose the optimum tap position so that neither ""v_max"" nor ""v_min""  as maximum and minimum allowed voltage in the grid is  violated. Note that if no bus is entered controller assume secondary bus (bus1) of transformer as the control bus. ",Input (optional)
oltc,boolean,n/a,False,"On-load tap changer control, used to activate transformer oltc featere. If ""ctrl_bus"" contains one bus name or is empty (single bus control): the attributes:  ""tap_ratio"",  ""tap_position"", ""tap_side"", ""tap_min"", ""tap_max"", ""tap_step"", ""v_set"", ""deadband"" and ""ctrl_bus"" are used. If ""ctrl_bus"" contain multiple buses,  instead of ""deadband"" minimum allowed volatage ""v_min"" and maximum allowed voltage ""v_max"" are used along with other attributes mentioned for single bus control.",Input (optional)
=======
tap_min,int,n/a,0,Minimum tap position,Input (optional)
tap_max,int,n/a,0,Maximum tap position,Input (optional)
tap_step,float,Percent,2.5,Tap step size in percentage of voltage change,Input (optional)
v_min,float,per unit,0.9,"Minimum allowed voltage in the grid, used when ""ctrl_nodes"" are  more than one. ",Input (optional)
v_max,float,per unit,1.02,"Maximum allowed voltage in the grid, used when ""ctrl_nodes"" are more than one. ",Input (optional)
v_set,float,per unit,1,"Nominal v_mag_pu of transformer, it is used by oltc control to bring the controlled node voltage as close as possible to ""v_set"".",Input (optional)
deadband,float,Percent,1.8,"Deadband will determine the acceptable upper range and lower range values of controlled node voltages. Deadband will be used when ""ctrl_nodes"" is one or empty, if it is empty, oltc will take node of transformer secondary as the controlled node. If ""ctrl_nodes"" contains more than one node, ""v_min"" and ""v_max"" are used instead of deadband.",Input (optional)
ctrl_nodes,string,n/a,,"Names of the control nodes, oltc controller can control either one node or several nodes, if single node is given, from the available tap positions controller will choose the tap position that brings the controlled node voltage as close as possible to the ""v_set"" the controller will converge if the controlled node voltage is between v_set + deadband/100*v_set and v_set - deadband/100*v_set values. If more than one node is given to be controlled, from the available tap positions controller will choose the optimum tap position so that neither ""v_max"" nor ""v_min""  as maximum and minimum allowed voltage in the grid is  violated. Note that if no node is entered controller assume secondary bus (bus1) of transformer as the control node. ",Input (optional)
oltc,boolean,n/a,False,"On-load tap changer control, used to activate transformer oltc featere. If ""ctrl_node"" contains one bus name or is empty (single node control): the attributes:  ""tap_ratio"",  ""tap_position"", ""tap_side"", ""tap_min"", ""tap_max"", ""tap_step"", ""v_set"", ""deadband"" and ""ctrl_nodes"" are used. If ""ctrl_node"" contain multiple nodes,  instead of ""deadband"" minimum allowed volatage ""v_min"" and maximum allowed voltage ""v_max"" are used along with other attributes mentioned for single node control.",Input (optional)
>>>>>>> fcbc694b7b5ccc3d80d271383f8fad06ac5ba1d1
phase_shift,float,Degrees,0,Voltage phase angle shift.  Ignored if type defined.,Input (optional)
v_ang_min,float,Degrees,-inf,Minimum voltage angle difference across the transformer. This is a placeholder attribute and is not currently used by any PyPSA functions.,Input (optional)
v_ang_max,float,Degrees,inf,Maximum voltage angle difference across the transformer. This is a placeholder attribute and is not currently used by any PyPSA functions.,Input (optional)
sub_network,string,n/a,n/a,Name of connected sub-network to which transformer belongs. This attribute is set by PyPSA in the function network.determine_network_topology(); do not set it directly by hand.,Output
p0,series,MW,0,Active power at bus0 (positive if branch is withdrawing power from bus0).,Output
q0,series,MVar,0,Reactive power at bus0 (positive if branch is withdrawing power from bus0).,Output
p1,series,MW,0,Active power at bus1 (positive if branch is withdrawing power from bus1).,Output
q1,series,MVar,0,Reactive power at bus1 (positive if branch is withdrawing power from bus1).,Output
x_pu,float,per unit,0,Per unit series reactance calculated by PyPSA from x and bus.v_nom.,Output
r_pu,float,per unit,0,Per unit series resistance calculated by PyPSA from r and bus.v_nom,Output
g_pu,float,per unit,0,Per unit shunt conductivity calculated by PyPSA from g and bus.v_nom,Output
b_pu,float,per unit,0,Per unit shunt susceptance calculated by PyPSA from b and bus.v_nom,Output
x_pu_eff,float,per unit,0,"Effective per unit series reactance for linear power flow, calculated by PyPSA from x, tap_ratio for transformers and bus.v_nom.",Output
r_pu_eff,float,per unit,0,"Effective per unit series resistance for linear power flow, calculated by PyPSA from x, tap_ratio for transformers and bus.v_nom.",Output
s_nom_opt,float,MVA,0,Optimised capacity for apparent power.,Output
mu_lower,series,currency/MVA,0,Shadow price of lower s_nom limit  -F \leq f. Always non-negative.,Output
mu_upper,series,currency/MVA,0,Shadow price of upper s_nom limit f \leq F. Always non-negative.,Output
opt_tap_position,series,n/a,0,optimum tap position outputs,Output
